{
  "version": 3,
  "sources": ["../../../../src/functions/generateCertificate.ts", "../../../../src/utils/dynamodbClient.ts"],
  "sourcesContent": ["import { APIGatewayProxyHandler } from \"aws-lambda\"\r\nimport { document } from \"../utils/dynamodbClient\"\r\n\r\ninterface ICreateCertificate {\r\n  id: string,\r\n  name: string,\r\n  grade: string\r\n}\r\n\r\nexport const handler: APIGatewayProxyHandler = async (event) => {\r\n\r\n  const { id, name, grade } = JSON.parse(event.body) as ICreateCertificate\r\n\r\n  await document\r\n    .put({\r\n      TableName: \"users_certificate\",\r\n      Item: {\r\n        id,\r\n        name,\r\n        grade,\r\n        created_at: new Date().getTime()\r\n      }\r\n    }).promise()\r\n\r\n\r\n  const respose = await document.query({\r\n    TableName: \"users_certificate\",\r\n    KeyConditionExpression: \"id = :id\",\r\n    ExpressionAttributeValues: {\r\n      \":id\": id\r\n    }\r\n  }).promise()\r\n\r\n  return {\r\n    statusCode: 201,\r\n    body: JSON.stringify(respose.Items[0])\r\n  }\r\n}", "import { DynamoDB } from \"aws-sdk\"\r\n\r\nconst options = {\r\n  region: \"localhost\",\r\n  endpoint: \"http://localhost:8000\",\r\n  accessKeyId: \"x\",\r\n  secretAccessKey: \"x\"\r\n}\r\n\r\n// const isOffline = () => {\r\n//   return process.env.IS_OFFLINE\r\n// }\r\n\r\nexport const document = new DynamoDB.DocumentClient(options)"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,qBAAyB;AAEzB,IAAM,UAAU;AAAA,EACd,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,aAAa;AAAA,EACb,iBAAiB;AACnB;AAMO,IAAM,WAAW,IAAI,wBAAS,eAAe,OAAO;;;ADJpD,IAAM,UAAkC,OAAO,UAAU;AAE9D,QAAM,EAAE,IAAI,MAAM,MAAM,IAAI,KAAK,MAAM,MAAM,IAAI;AAEjD,QAAM,SACH,IAAI;AAAA,IACH,WAAW;AAAA,IACX,MAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA,aAAY,oBAAI,KAAK,GAAE,QAAQ;AAAA,IACjC;AAAA,EACF,CAAC,EAAE,QAAQ;AAGb,QAAM,UAAU,MAAM,SAAS,MAAM;AAAA,IACnC,WAAW;AAAA,IACX,wBAAwB;AAAA,IACxB,2BAA2B;AAAA,MACzB,OAAO;AAAA,IACT;AAAA,EACF,CAAC,EAAE,QAAQ;AAEX,SAAO;AAAA,IACL,YAAY;AAAA,IACZ,MAAM,KAAK,UAAU,QAAQ,MAAM,CAAC,CAAC;AAAA,EACvC;AACF;",
  "names": []
}
